//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate Fluent Mapping template.
// Code is generated on: 18/07/2012 07:55:53
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using AdventureWorks.Domain;
using FluentNHibernate.Mapping;
using FluentNHibernate.MappingModel.Collections;

namespace AdventureWorks.Repository
{
    public class CustomerAddressMap : ClassMap<CustomerAddress>
    {
        public CustomerAddressMap()
        {
              Schema("SalesLT");
              Table("CustomerAddress");
              LazyLoad();
              CompositeId()
                .KeyProperty(x => x.CustomerID, set => {
                    set.Type("Int32");
                    set.ColumnName("CustomerID");
                    set.Access.Property(); } )
                .KeyProperty(x => x.AddressID, set => {
                    set.Type("Int32");
                    set.ColumnName("AddressID");
                    set.Access.Property(); } );
              Map(x => x.AddressType)    
                .Column("AddressType")
                .CustomType("String")
                .Access.Property()
                .Generated.Never()
                .CustomSqlType("nvarchar")
                .Not.Nullable()
                .Length(50);
              Map(x => x.Rowguid)    
                .Column("rowguid")
                .CustomType("Guid")
                .Access.Property()
                .Generated.Never()
                .Default("newid()")
                .CustomSqlType("uniqueidentifier")
                .Not.Nullable()
                .Unique();
              Map(x => x.ModifiedDate)    
                .Column("ModifiedDate")
                .CustomType("DateTime")
                .Access.Property()
                .Generated.Never()
                .Default("getdate()")
                .CustomSqlType("datetime")
                .Not.Nullable();
              References(x => x.Customer)
                .Class<Customer>()
                .Access.Property()
                .Cascade.None()
                .LazyLoad()
                .Columns("CustomerID");
              References(x => x.Address)
                .Class<Address>()
                .Access.Property()
                .Cascade.None()
                .LazyLoad()
                .Columns("AddressID");
        }
    }

}
